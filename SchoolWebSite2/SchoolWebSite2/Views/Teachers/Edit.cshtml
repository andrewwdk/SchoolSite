@model SchoolWebSite2.Models.TeacherWithSubjectsModel

<style>
    .options {
        width: 20%;
        background-color: aliceblue;
    }

    .main-part {
        width: 60%;
        text-align: center;
        margin: 20px 10%;
    }

    .main-container {
        display: flex;
        flex-wrap: wrap;
    }

    label, .input-font-size {
        font-size: 20px;
        margin: 0 20px;
        padding-top: 6px;
    }

    .main-content {
        margin: 20px 28%;
        font-size: 20px;
    }

    .lesson-number {
        font-size: 20px;
        padding-top: 8px;
    }

    .number-input {
        width: 50px;
    }

    .code-input {
        width: 150px;
    }

    .class-teacher-input {
        width: 60%;
    }
</style>

<div class="main-container">
    <div class="options">
        @Html.Partial("UserOptions")
    </div>
    <div class="main-part">
        <h2>@Model.Teacher.FullName</h2>
        @Html.AntiForgeryToken()

        @using (Html.BeginForm("Edit", "Teachers", null, FormMethod.Post))
        {
            <div style="display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;">
                @Html.HiddenFor(model => model.Teacher.PersonId)
                <div style="display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;margin:10px 0;">
                    @Html.LabelFor(model => model.Teacher.TeacherLoad, htmlAttributes: new { @class = "" })
                    @Html.EditorFor(model => model.Teacher.TeacherLoad, new { htmlAttributes = new { @class = "form-control code-input", @min = "1", @max = "100" } })
                </div>
                <input type="submit" value="Сохранить" class="btn btn-default" style="margin:10px 0;" />
            </div>
            @Html.ValidationMessageFor(model => model.Teacher.TeacherLoad, "", new { @class = "text-danger" })
        }

        <h2>Добавление предмета</h2>

        @using (Html.BeginForm("AddSubject", "Teachers", null, FormMethod.Post))
        {
            @Html.HiddenFor(model => model.Teacher.PersonId)
            <div style="display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;">
                <div style="display:flex;flex-direction:row;width:100%;flex-wrap:wrap;justify-content:center;margin:10px 0;">
                    @Html.LabelFor(model => model.NewSubjectId, htmlAttributes: new { @class = "" })
                    @Html.DropDownListFor(model => model.NewSubjectId, (SelectList)ViewBag.Subjects, "Выберите новый предмет", new { @class = "form-control input-font-size class-teacher-input", @style = "height:auto;" })
                </div>
                <input type="submit" value="Добавить" class="btn btn-default" style="margin:10px 0;" />
            </div>
            @Html.ValidationMessageFor(model => model.NewSubjectId, "", new { @class = "text-danger" })
        }

        <h2>Список предметов преподавателя</h2>

        <div class="form-horizontal main-container">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="main-content">
                @for (int i = 0; i < Model.Subjects.Count(); i++)
                {
                    <div style="display:flex;flex-direction:row;width:400px;">
                        <div style="margin:10px 0;"> @Model.Subjects[i].FullName </div>
                        @using (Html.BeginForm("RemoveSubject", "Teachers", new { subjectId = Model.Subjects[i].Id, teacherId = Model.Teacher.PersonId }, FormMethod.Post))
                        {
                            <input type="submit" value="Удалить" class="btn btn-default" style="margin-left:auto;margin:10px 10px;" />
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>